{"version":3,"sources":["components/Sidebar.jsx","components/Dashboard.jsx","components/Refferl.jsx","components/Report.jsx","components/Logout.jsx","components/Razorpay.jsx","components/JoinNmem.jsx","components/Activation.jsx","components/Widthdrawl.jsx","components/ChangPass.jsx","components/UpdatePro.jsx","components/Transfer.jsx","components/MyTeam.jsx","components/loginpage/Login.jsx","admin/AdminLogin.jsx","admin/components/TransactionHistory.jsx","admin/components/Logout.jsx","admin/components/UserList.jsx","admin/components/Setting.jsx","admin/Dashboard.jsx","components/Referal.jsx","App.js","index.js"],"names":["Link","to","title","icons","exact","activeClassName","icon","Sidebar","style","display","height","overflow","textColor","backgroundColor","prefix","className","color","Dashboard","user","JSON","parse","localStorage","getItem","promotion","global","history","useHistory","useEffect","push","axios","post","token","then","res","data","status","setItem","stringify","uid","username","Date","created_at","toLocaleDateString","length","role","padding","wallet","main_wallet","Refferl","useState","copied","setCopied","shareUrl","window","location","hostname","referralCode","referals","type","defaultValue","disabled","text","onCopy","FacebookShareButton","url","quote","FacebookIcon","size","round","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","LevelReport","TransactionHistory","txd","setTxd","transaction","catch","err","console","log","map","tx","amount","_id","Report","Logout","setTeam","removeItem","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","Razorpay","userDetail","a","alert","parseInt","options","key","currency","toString","order_id","id","name","description","image","handler","response","razorpay_payment_id","razorpay_order_id","razorpay_signature","method","uname","phone","email","aadhar","head","withCredentials","prefill","phone_number","open","onClick","e","preventDefault","displayRazorpay","JoinNmem","useForm","register","errors","formState","regsiterUsername","setRegisterUsername","regsiterName","setRegisterName","regsiterPhone","setRegisterPhone","regsiterEmail","setRegisterEmail","regsiterAddar","setRegisterAddar","regsiterHeadmem","setRegisterHeadmem","id_count","Form","Group","controlId","Label","Control","placeholder","required","value","onChange","target","render","message","minLength","maxLength","addhar","Button","variant","Activation","noofid","setNumberOfId","perid","loading","setLoading","error","setError","activation_wallet","onSubmit","no_of_ids","balance","readOnly","Widthdrawl","setAmount","setBalance","success","setSuccess","ChangPass","handleSubmit","currentPassword","setCurrentPassword","newPassword","setnewPassword","reEnterPassword","setReEnterPassword","old_password","new_password","UpdateProfile","regsiterBankname","setRegisterBankname","regsiterAcountNo","setRegisterAccountNo","regsiterIfsc","setRegisterIfsc","regsiterHolder","setRegisterHolder","regsiterBankbranch","setRegisterBankbranch","is_bank_locked","bank_name","account_number","account_holder_name","bank_branch","ifsc_code","bank","border","UpdatePro","Transfer","mainBalance","setMainBalance","MyTeam","team","userIds","member","index","scope","Login","setUsername","password","setPassword","fontWeight","config","id_price","globalCount","setTimeout","CheckLogin","AdminLogin","columns","selector","row","sortable","transactions","setTransactions","get","pagination","paginationPerPage","clicked","setClicked","class","UserEditModel","UserDetailEditForm","setEmail","setPhone","head_member","setHeadMember","setBankName","setAccountNumber","setAccountHolderName","setBankBranch","setIfscCode","is_admin","setIsAdmin","setIsBankLocked","setIdCount","setCreatedAt","bronze","joined","levels","days","missed","silver","gold","pearl","emerald","ruby","platinum","diamond","royal","crown","king","level","setLevel","htmlFor","UserList","users","setUsers","put","striped","bordered","hover","Setting","price","setPrice","promo","setPromo","loading1","setLoading1","loading2","setLoading2","AdminDashboard","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","Item","eventKey","Content","Pane","Referal","params","useParams","width","position","ref_id","referid","MasterForm","props","handleChange","event","setState","state","aadhaar","fetch","headers","json","_next","currentStep","_prev","this","Step1","Step2","Step3","previousButton","nextButton","React","Component","Fragment","App","path","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19e839d9.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from \"cdbreact\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Link = ({ to, title, icons }) => {\n    return (\n          <NavLink\n            exact\n            to={\"/\" + to}\n            activeClassName=\"activeClicked\"\n        >\n            <CDBSidebarMenuItem icon={ icons }>\n                {title}\n            </CDBSidebarMenuItem>\n        </NavLink>\n    )\n}\nconst Sidebar = () => {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                height: \"cover\",\n                overflow: \"scroll initial\",\n            }}\n        >\n            <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n\n                <CDBSidebarHeader prefix={<i className=\"fa fa-bars\"></i>} >\n\n                    <span className=\"text-decoration-none\" style={{ color: \"inherit\" }}>Logo</span>\n                </CDBSidebarHeader>\n\n                <CDBSidebarContent className=\"sidebar-content\">\n                    <CDBSidebarMenu>\n                        <Link to=\"dashboard\" title=\"Dashboard\" icons=\"columns\" />\n                        <Link to=\"referrals\" title=\"Referrals\" icons=\"user-friends\"/>\n                        <Link to=\"join\" title=\"Join new Member\" icons=\"user-plus\"/>\n                        <Link to=\"update\" title=\"Update Profile\" icons=\"users-cog\"/>\n                        <Link to=\"widthdrawl\" title=\"Widthdrawl\" icons=\"piggy-bank\"/>\n                        <Link to=\"transfer\" title=\"Transfer\" icons=\"exchange-alt\"/>\n                        <Link to=\"myteam\" title=\"My Team\" icons=\"users\"/>\n                        <Link to=\"report\" title=\"Report\" icons=\"chart-bar\"/>\n                        <Link to=\"logout\" title=\"Log out\" icons=\"power-off\"/>\n                    </CDBSidebarMenu>\n                </CDBSidebarContent>\n            </CDBSidebar>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import { useEffect } from \"react\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Dashboard() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const promotion = localStorage.getItem(\"promotion\");\n    const global = localStorage.getItem(\"globalCount\");\n    const history = useHistory();\n    useEffect(() => {\n        if (!user) {\n            history.push(\"/logout\");\n        }\n        axios.post(\"https://stormy-ridge-27884.herokuapp.com/getUser\", { token: localStorage.getItem(\"token\") })\n            .then(res => {\n                if (res.data.status === \"success\") {\n                    localStorage.setItem(\"user\", JSON.stringify(res.data.data));\n                }\n            })\n\n    }, [history, user]);\n    return (\n        <div className=\"section\">\n\n            <nav className=\"navbar text-white bg-dark d-flex justify-content-between flex-s-column flex-md-row\">\n                <div className=\"bg-danger p-2\">ID : {user.uid}</div>\n                <div className=\"p-2\">{user.username}</div>\n                <div className=\"p-2\">{new Date(user.created_at).toLocaleDateString()}</div>\n            </nav>\n\n            {promotion.length !== 0 && (\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                    <h4 className=\"alert-heading text-center\">{promotion}</h4>\n                </div>\n            )}\n\n            <div className=\"container\" style={{ padding: \"1rem 0\" }}>\n                <div className=\"row\">\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Referal Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Joing Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Level Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Total Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Main Income</span>\n                        <h5 className=\"text-black\">{user.wallet.main_wallet}</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Active Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Offer Income</span>\n                        <h5 className=\"text-black\">0</h5>\n                    </div>\n                    <div className=\"col-md-2 col-sm-12 card card-hover-shadow h-100 m-2 p-2\">\n                        <span>Global</span>\n                        <h5 className=\"text-black\">{global - user.uid}</h5>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport {\n    FacebookShareButton,\n    WhatsappShareButton,\n    LinkedinShareButton,\n    TwitterShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    LinkedinIcon,\n    TwitterIcon,\n} from \"react-share\";\nimport \"../App.css\";\n\nfunction Refferl() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [copied, setCopied] = useState(false);\n    const shareUrl = `https://${window.location.hostname}/referal/${user.referralCode}` \n\n    return (\n        <div className=\"section\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12 font-weight-bold\">\n                        <h4>Total Referrel Count: { user.referals.length } </h4>\n                    </div>\n                </div>\n                <div className=\"row  mb-3\">\n                    <div className=\"col-md-12\">\n                        <div className=\"refferl-link\">\n                            <input type=\"text\" defaultValue={ shareUrl } className=\"mb-1 form-control text-black pl-2\" disabled/>\n                            <CopyToClipboard\n                                text={shareUrl}\n                                onCopy={() => setCopied(true)}\n                            >\n                                <button\n                                    className={`btn btn-primary ${copied ? \"disabled\" : \"\"}`}\n                                >\n                                    {copied ? \"Copied\": \"Copy Link\"}\n                                </button>\n                            </CopyToClipboard>\n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"refferl-share\">\n                            <FacebookShareButton\n                                url={shareUrl}\n                                quote=\"Share Your Referral Link\"\n                            >\n                                <FacebookIcon size={32} round />\n                            </FacebookShareButton>\n                            <WhatsappShareButton url={shareUrl}>\n                                <WhatsappIcon size={32} round />\n                            </WhatsappShareButton>\n                            <LinkedinShareButton url={shareUrl}>\n                                <LinkedinIcon size={32} round />\n                            </LinkedinShareButton>\n                            <TwitterShareButton url={shareUrl}>\n                                <TwitterIcon size={32} round />\n                            </TwitterShareButton>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n//             <div>\n//                     <h3>\n//                         <b>\n                            \n//                         </b>\n//                     </h3>\n//                 <h5>\n//                     Your Referral Link: \n//                     <span>\n//                         <input\n//                             type=\"text\"\n//                             defaultValue={user.referralCode}\n//                             className=\"form-control\"\n//                         />\n//                         <CopyToClipboard\n//                             text={user.referralCode}\n//                             onCopy={() => setCopied(true)}\n//                         >\n//                             <button>Copy</button>\n//                         </CopyToClipboard>\n//                         {copied ? (\n//                             <span style={{ color: \"red\" }}>Copid</span>\n//                         ) : null}\n//                     </span>\n//                 </h5>\n//             </div>\n\n//             <div\n//                 style={{\n//                     background: \"#fff\",\n//                     height: \"100vh\",\n//                     width: \"100%\",\n//                 }}\n//             >\n//                 <h3 className=\"px-5\">Share Now:</h3>\n//                 <div className=\"d-flex px-5 py-3 mx-5 flex-row\">\n//                     <FacebookShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <FacebookIcon size={40} round={true} />\n//                         &nbsp;\n//                     </FacebookShareButton>\n\n//                     <WhatsappShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <WhatsappIcon size={40} round={true} />\n//                         &nbsp;\n//                     </WhatsappShareButton>\n\n//                     <LinkedinShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <LinkedinIcon size={40} round={true} />\n//                         &nbsp;\n//                     </LinkedinShareButton>\n\n//                     <TwitterShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <TwitterIcon size={40} round={true} />\n//                         &nbsp;\n//                     </TwitterShareButton>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nexport default Refferl;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Report() {\n    return (\n        <div className=\"section\">\n            <h2>My Report</h2>\n            <LevelReport />\n            <TransactionHistory />\n        </div>\n    );\n}\n\nconst LevelReport = () => {\n    // const [level, setLevel] = useState([]);\n    return (\n        <div className=\"section\">\n            <h3>Level Report</h3>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <table className=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>Rank</th>\n                                <th>Level</th>\n                                <th>Direct</th>\n                                <th>Income</th>\n                                <th>Days</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr className=\"table-success\">\n                                <td>Bronze Star</td>\n                                <td>100</td>\n                                <td>1</td>\n                                <td>40</td>\n                                <td>30</td>\n                                <td>1200</td>\n                            </tr>\n                            <tr>\n                                <td>Silver Star</td>\n                                <td>200</td>\n                                <td>1</td>\n                                <td>50</td>\n                                <td>30</td>\n                                <td>1500</td>\n                            </tr>\n                            <tr>\n                                <td>Gold Star</td>\n                                <td>400</td>\n                                <td>3</td>\n                                <td>80</td>\n                                <td>30</td>\n                                <td>2400</td>\n                            </tr>\n                            <tr>\n                                <td>Pearl Star</td>\n                                <td>600</td>\n                                <td>5</td>\n                                <td>110</td>\n                                <td>30</td>\n                                <td>3300</td>\n                            </tr>\n                            <tr>\n                                <td>Emerald Star</td>\n                                <td>800</td>\n                                <td>7</td>\n                                <td>140</td>\n                                <td>40</td>\n                                <td>5600</td>\n                            </tr>\n                            <tr>\n                                <td>Ruby Star</td>\n                                <td>1000</td>\n                                <td>9</td>\n                                <td>170</td>\n                                <td>40</td>\n                                <td>6800</td>\n                            </tr>\n                            <tr>\n                                <td>Platinum Star</td>\n                                <td>1200</td>\n                                <td>11</td>\n                                <td>200</td>\n                                <td>40</td>\n                                <td>8000</td>\n                            </tr>\n                            <tr>\n                                <td>Diamond Star</td>\n                                <td>1400</td>\n                                <td>13</td>\n                                <td>230</td>\n                                <td>40</td>\n                                <td>9200</td>\n                            </tr>\n                            <tr>\n                                <td>Royal Star</td>\n                                <td>1600</td>\n                                <td>15</td>\n                                <td>260</td>\n                                <td>60</td>\n                                <td>15600</td>\n                            </tr>\n                            <tr>\n                                <td>Crown Star</td>\n                                <td>1800</td>\n                                <td>17</td>\n                                <td>290</td>\n                                <td>60</td>\n                                <td>17400</td>\n                            </tr>\n                            <tr>\t\n                                <td>King</td>\n                                <td>2000</td>\n                                <td>19</td>\n                                <td>320</td>\n                                <td>60</td>\n                                <td>19200</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                </div>\n\n\n        </div>\n    );\n}\n\nconst TransactionHistory = () => {\n    const [txd, setTxd] = useState([]);\n    useEffect(() => {\n        axios.post(\"http://localhost:5000/transaction/user\", { token: localStorage.getItem(\"token\") })\n            .then(res => {\n                setTxd(res.data.transaction);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [])\n    return (\n        <div className=\"section\">\n            {txd ? (\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>Transaction History</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            <th>Date</th>\n                                            <th>Amount</th>\n                                            <th>Type</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {txd.map(tx => (\n                                            <tr key={tx._id}>\n                                                <td>{new Date(tx.created_at).toLocaleDateString()}</td>\n                                                <td>{tx.amount}</td>\n                                                <td>{tx.type}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>Transaction History</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <h3>No Transaction History</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\nexport default Report;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nfunction Logout({setTeam}) {\n    let history = useHistory();\n    useEffect(() => {\n        axios.post(\"https://stormy-ridge-27884.herokuapp.com/logout\", { token: localStorage.getItem(\"token\") })\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"id_price\");\n        localStorage.removeItem(\"promotion\");\n        setTeam([]);\n        history.push(\"/\");\n    });\n    return (\n        <div>\n            <h1>Log Out Successful</h1>\n        </div>\n    );\n}\n\nexport default Logout;\n","import axios from 'axios'\n\nfunction loadScript(src) {\n\treturn new Promise((resolve) => {\n\t\tconst script = document.createElement('script')\n\t\tscript.src = src\n\t\tscript.onload = () => {\n\t\t\tresolve(true)\n\t\t}\n\t\tscript.onerror = () => {\n\t\t\tresolve(false)\n\t\t}\n\t\tdocument.body.appendChild(script)\n\t})\n}\n\n\nfunction Razorpay({amount, userDetail}) {\n\tconsole.log(userDetail)\n\tasync function displayRazorpay() {\n\t\tconst res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')\n\n\t\tif (!res) {\n\t\t\talert('Razorpay SDK failed to load. Are you online?')\n\t\t\treturn\n\t\t}\n\n        const data = await axios.post('https://stormy-ridge-27884.herokuapp.com/pay/razorpay', {\n            amount: parseInt(amount),\n        })\n\n\t\tconst options = {\n\t\t\tkey: 'rzp_test_E1a23udbRfmhNA' ,\n\t\t\tcurrency: data.data.currency,\n\t\t\tamount: data.data.amount.toString(),\n\t\t\torder_id: data.data.id,\n\t\t\tname: 'Join Member',\n\t\t\tdescription: 'Fill this forum to join new Member',\n\t\t\timage: './favicon.svg',\n\t\t\thandler: (response) => {\n\t\t\t\talert(response.razorpay_payment_id)\n\t\t\t\talert(response.razorpay_order_id)\n\t\t\t\talert(response.razorpay_signature)\n\n\t\t\t\taxios({\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttoken: localStorage.getItem(\"token\"),\n\t\t\t\t\t\tusername: userDetail.uname,\n\t\t\t\t\t\tname: userDetail.name,\n\t\t\t\t\t\tphone: userDetail.phone,\n\t\t\t\t\t\temail: userDetail.email,\n\t\t\t\t\t\taadhar: userDetail.aadhar,\n\t\t\t\t\t\thead: userDetail.head\n\t\t\t\t\t},\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t\turl: \"https://stormy-ridge-27884.herokuapp.com/register\",\n\t\t\t\t}).then(res => {\n\t\t\t\t\tconsole.log(res.data)\n\t\t\t\t\tif (res.data.status === \"success\") {\n\t\t\t\t\t\talert(\"Registered Successfully\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Registration Failed\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t},\n\t\t\tprefill: {\n\t\t\t\tname: userDetail.name,\n\t\t\t\temail: userDetail.email,\n\t\t\t\tphone_number: userDetail.phone\n\t\t\t}\n\t\t}\n\t\tconst paymentObject = new window.Razorpay(options)\n\t\tpaymentObject.open()\n\t}\n\n\treturn (\n\t\t<button onClick={(e) => {\n\t\t\te.preventDefault()\n\t\t\tdisplayRazorpay()\n\t\t}} className=\"btn-primary\">Pay Rs. { amount }</button>\n\t)\n}\n\nexport default Razorpay;","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport Razorpay from \"./Razorpay\"\n\nfunction JoinNmem() {\n    const {\n        register,\n        formState: { errors },\n    } = useForm();\n    const [regsiterUsername, setRegisterUsername] = useState(\"\");\n    const [regsiterName, setRegisterName] = useState(\"\");\n    const [regsiterPhone, setRegisterPhone] = useState(\"\");\n    const [regsiterEmail, setRegisterEmail] = useState(\"\");\n    const [regsiterAddar, setRegisterAddar] = useState(\"\");\n    const [regsiterHeadmem, setRegisterHeadmem] = useState(\"\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n\n    return (\n        <div className=\"section\">\n            <h2>Available IDs : {user.id_count}</h2>\n            <h1 className=\"join-head\">Join Members</h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"fromRegisterUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"username\"\n                        {...register(\"uname\", {\n                            required: \"Username is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterUsername}\n                        onChange={(e) => setRegisterUsername(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"uname\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"fromRegisterName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        {...register(\"name\", {\n                            required: \"Name is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterName}\n                        onChange={(e) => setRegisterName(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n           \n                <Form.Group className=\"mb-3\" controlId=\"fromRegisterPhone\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"phone no\"\n                        {...register(\"phone\", {\n                            required: \"phone no is required\",\n                            minLength: {\n                                value: 10,\n                                message: \"Phone number minimum 10 character\",\n                            },\n                            maxLength: {\n                                value: 10,\n                                message: \"Phone number maximum 10 character\",\n                            },\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterPhone}\n                        onChange={(e) => setRegisterPhone(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"phone\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter your Email\"\n                        {...register(\"email\", {\n                            required: \"Email number is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterEmail}\n                        onChange={(e) => setRegisterEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formRegisterAadhar\">\n                    <Form.Label>Aadhar No</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Addhar\"\n                        {...register(\"addhar\", {\n                            required: \"Addhar number is required\",\n\n                            minLength: {\n                                value: 12,\n                                message: \"Addhar number minimum 12 character\",\n                            },\n                            maxLength: {\n                                value: 16,\n                                message: \"Addhar numbe maximum 16 character\",\n                            },\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterAddar}\n                        onChange={(e) => setRegisterAddar(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"addhar\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"fromRegisterHeadMember\">\n                    <Form.Label>Head Member</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Head member\"\n                        {...register(\"head\", {\n                            required: \"Head Member is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={regsiterHeadmem}\n                        onChange={(e) => setRegisterHeadmem(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"head\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <div className=\"w-50 paySection\">\n                     <Razorpay amount={localStorage.getItem(\"id_price\")} userDetail={{\n                            uname: regsiterUsername,\n                            name: regsiterName,\n                            phone: regsiterPhone,\n                            email: regsiterEmail,\n                            addhar: regsiterAddar,\n                            head: regsiterHeadmem\n                        }} />\n                    <span className=\"mr-2\">OR</span>\n                    <Button\n                        variant=\"primary\"\n                        type=\"submit\"\n                        disabled={user.id_count === 0}\n                    >\n                    Pay with Activation wallet (Remaining IDs {user.id_count})\n                </Button>\n               </div>\n            </Form>\n        </div>\n    );\n}\n\nexport default JoinNmem;\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nfunction Activation() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [noofid, setNumberOfId] = useState(0);\n    const [perid] = useState(localStorage.getItem(\"id_price\"));\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const buyActivationWalletRecharge = (e) => {\n        e.preventDefault();\n        axios.post(\"http://stormy-ridge-27884.herokuapp.com/buy_ids\", {\n            token: localStorage.getItem(\"token\"),\n            no_of_ids: parseInt(noofid),\n            amount: parseInt(perid * noofid)\n        }).then(res => {\n            console.log(res.data);\n            user.wallet = res.data.balance;\n            user.id_count += parseInt(noofid)\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            setLoading(false);\n        }).catch(err => {\n            console.log(err);\n            setLoading(false);\n            setError(true);\n        });\n    }\n    return (\n        <div className=\"active-container\">\n            <h2\n                className={`text-center ${error ? \"text-danger\" : \"text-primary\"}`}\n                \n            >\n            {user.wallet.activation_wallet > 0 ? \"Your activation wallet balance is \" + user.wallet.activation_wallet: \"You don't have any wallet balance\"}\n            </h2>\n            <h1 className=\"active-head\">Buy ID's From Activation Wallet</h1>\n            <Form onSubmit={buyActivationWalletRecharge}>\n                <Form.Group className=\"mb-3\" controlId=\"formNoOfID\">\n                    <Form.Label>Number Of ID: </Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        name=\"id\"\n                        placeholder=\"Enter number of id \"\n                        className=\"text-left pl-2 w-100\"\n                        value={noofid || 0}\n                        onChange={(e) => setNumberOfId(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formPerIDValue\">\n                    <Form.Label>Per ID: </Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        defaultValue={perid || 0}\n                        className=\"text-left pl-2 w-100\"\n                        disabled\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formFinalAmount\">\n                    <Form.Label>Final Amount: </Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        name=\"famount\"\n                        className=\"text-left pl-2 w-100\"\n                        value={noofid && perid ? noofid * perid : 0}\n                        disabled\n                        readOnly\n                    />\n                </Form.Group>\n                <Button\n                    variant={noofid && perid ? \"primary\" : \"secondary\"}\n                    type=\"submit\"\n                    className={loading ? \"btn-secondary\" : \"btn-primary\"}\n                    onClick={() => setLoading(true)}\n                >\n                    {loading ? \"Loading...\" : \"Buy\"}\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Activation;\n","import Activation from \"./Activation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\n\nfunction Widthdrawl() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [amount, setAmount] = useState(0)\n    const [balance, setBalance] = useState(user.wallet.main_wallet)\n    const [success, setSuccess] = useState(false)\n    const withdrawlBalance = (e) => {\n        e.preventDefault();\n        axios({\n            method: \"POST\",\n            data: {\n                username: user.username,\n                amount: amount,\n                token: JSON.parse(localStorage.getItem(\"token\"))\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/withdraw_from_main\",\n        }).then((response) => {\n            user.wallet = response.data.balance;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            setBalance(response.data.balance.main_wallet)\n            setSuccess(true)\n        });\n    };\n\n    return (\n        <div className=\"section\">\n            <div\n                className=\"alert alert-success text-center alert-dismissible fade show\"\n                role=\"alert\"\n                style={{ display: success ? \"block\" : \"none\" }}\n            >\n                Withdrawl Successful\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"alert\"\n                    aria-label=\"Close\"\n                    onClick={() => setSuccess(false)}\n                >\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <h1 className=\"withd-head\">Withdrawal Balance</h1>\n       \n            <form onSubmit={withdrawlBalance}>\n                <div className=\"form-group\" key=\"formAvailableBalance\">\n                    <label>Available Balance</label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control text-left pl-2 w-100\"\n                        placeholder=\"Available Balance\"\n                        value={balance}\n                        disabled\n                    />\n                </div>\n\n                <div className=\"form-group\" key=\"formWithdrawalAmount\">\n                    <label>Withdrawal Amount</label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control text-left pl-2 w-100\"\n                        placeholder=\"Enter Amount\"\n                        value={0 || amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                </div>\n\n\n                <div className=\"form-group\" key=\"formFinalAmount\">\n                    <label>Final Amount</label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control text-left pl-2 w-100\"\n                        placeholder=\"No Balance Found\"\n                        value={user.wallet.main_wallet - amount}\n                        disabled\n                    />\n                </div>\n                \n                <button\n                    type=\"submit\"\n                    className={user.wallet.main_wallet - amount >= 0 ? \"btn btn-primary\" : \"btn btn-primary disabled\"}\n                    disabled={user.wallet.main_wallet - amount >= 0 ? false : true}\n                >\n                    {user.wallet.main_wallet - amount >= 0 ? \"Withdraw\" : \"No Balance Found\"}\n                </button>\n\n                       \n\n            </form>\n            <br />\n            <br />\n            <Activation />\n        </div>\n    );\n}\n\nexport default Widthdrawl;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction ChangPass() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setnewPassword] = useState(\"\");\n    const [reEnterPassword, setReEnterPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const changePassword = () => {\n        if (newPassword === reEnterPassword) {\n            axios({\n                method: \"POST\",\n                data: {\n                    token: localStorage.getItem(\"token\"),\n                    old_password: currentPassword,\n                    new_password: newPassword,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/change_password\",\n            }).then((response) => {\n                console.log(response);\n                if (response.status === 200) {\n                    alert(\"Password changed successfully\");\n                }\n                setLoading(false);\n            }).catch((error) => {\n                console.log(error);\n                setLoading(false);\n            });\n        } else {\n            alert(\"password not match\");\n        }\n    };\n    const onSubmit = (data) => {\n        changePassword();\n    };\n    return (\n        <div className=\"change-container\">\n            <h1 className=\"change-head\">Change Password</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formCurrentPassword\">\n                    <Form.Label>Current Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your Current Password \"\n                        {...register(\"cpassword\", {\n                            required: \"Current password is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={currentPassword}\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"cpassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formNewPassword\">\n                    <Form.Label>New Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your new password\"\n                        {...register(\"npassword\", {\n                            required: \"Enter your new password\",\n                            maxLength: {\n                                value: 12,\n                                message: \"password maximum 12 character\",\n                            },\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={newPassword}\n                        onChange={(e) => setnewPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"npassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\n                    <Form.Label>Comfirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Comfirmation Password\"\n                        {...register(\"compassword\", {\n                            required: \"Re-enter your password\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={reEnterPassword}\n                        onChange={(e) => setReEnterPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"compassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n\n                <Button\n                    variant={newPassword === reEnterPassword ? \"primary\" : \"danger\"}\n                    type=\"submit\"\n                    onClick={() => setLoading(true)}\n                >\n                    {loading ? \"Loading...\" : (newPassword === reEnterPassword ? \"Change Password\" : \"Password not match\")}\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default ChangPass;\n","import ChangPass from \"./ChangPass\";\nimport { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction UpdatePro() {\n    return (\n        <div className=\"section\">\n           <UpdateProfile />\n            <br />\n            <ChangPass />\n        </div>\n    );\n}\n\n\nconst UpdateProfile = () => {\n    const {\n        register,\n        formState: { errors },\n    } = useForm();\n\n    const [regsiterBankname, setRegisterBankname] = useState(\"\");\n    const [regsiterAcountNo, setRegisterAccountNo] = useState(\"\");\n    const [regsiterIfsc, setRegisterIfsc] = useState(\"\");\n    const [regsiterHolder, setRegisterHolder] = useState(\"\");\n    const [regsiterBankbranch, setRegisterBankbranch] = useState(\"\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const update = (e) => {\n        e.preventDefault();\n        if (!user.is_bank_locked) {\n            console.log(\"Updating Bank INfo and Locking it\")\n            axios({\n                method: \"POST\",\n                data: {\n                    token: JSON.parse(localStorage.getItem(\"token\")),\n                    bank_name: regsiterBankname,\n                    account_number: regsiterAcountNo,\n                    account_holder_name: regsiterHolder,\n                    bank_branch: regsiterBankbranch,\n                    ifsc_code: regsiterIfsc,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/update_bank_info\",\n            }).then((response) => {\n                console.log(response);\n                user.is_bank_locked = true;\n                localStorage.setItem(\"user\", JSON.stringify(user));\n            }).catch((error) => {\n                console.log(error);\n            });\n        } else {\n            console.log(\"Can not update Bank Info\")\n        }\n    };\n    return (\n        <Form onSubmit={update}>\n             <h1 className=\"update-head\">Update Your Bank Information</h1>\n                <Form.Group className=\"mb-3\" controlId=\"formBankName\">\n                    <Form.Label>Bank Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"SBI/AXIS/PNB/HDFC\"\n                        {...register(\"bank-name\", {\n                            required: \"Bank Name is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={user.bank.bank_name || regsiterBankname}\n                        disabled= {user.is_bank_locked}\n                        onChange={(e) => setRegisterBankname(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"bank-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formAccountNumber\">\n                    <Form.Label>Account Number</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your bank account no\"\n                        {...register(\"account\", {\n                            required: \"Account no is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={user.bank.account_number || regsiterAcountNo}\n                        onChange={(e) => setRegisterAccountNo(e.target.value)}\n                        disabled={user.is_bank_locked}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"account\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formIFSCCode\">\n                    <Form.Label>IFSC Code</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter IFSC code\"\n                        {...register(\"ifsc\", {\n                            required: \"IFSC code is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={user.bank.ifsc_code || regsiterIfsc}\n                    onChange={(e) => setRegisterIfsc(e.target.value)}\n                        disabled={user.is_bank_locked}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"ifsc\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formAccountHolderName\">\n                    <Form.Label>Account Holder Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"holder-name\"\n                        {...register(\"holder-name\", {\n                            required: \"Holder-name is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        value={user.bank.account_holder_name || regsiterHolder}\n                        disabled={user.is_bank_locked}\n                        onChange={(e) => setRegisterHolder(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"holder-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBankBranch\">\n                    <Form.Label>Bank Branch</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Branch name\"\n                        {...register(\"branch\", {\n                            required: \"Branch name is required\",\n                        })}\n                        className=\"text-left pl-2 w-100\"\n                        disabled={user.is_bank_locked}\n                        value={user.bank.bank_branch || regsiterBankbranch}\n                        onChange={(e) => setRegisterBankbranch(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"branch\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n            <button\n                className={user.is_bank_locked ? \"btn-m rounded\" : \"btn-primary btn-m rounded\"}\n                style={user.is_bank_locked ? { backgroundColor: \"#00bcd4\", border: \"2px solid #00bcd4\" } : {}}\n                disabled={user.is_bank_locked}\n                title={user.is_bank_locked ? \"Bank Info is Locked\" : \"\"}\n                type=\"submit\"\n            >\n                Save bank Info\n            </button>\n        \n            </Form>\n    )\n}\nexport default UpdatePro;\n","import { Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Transfer() {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [amount, setAmount] = useState(0);\n    const [mainBalance, setMainBalance] = useState(user.wallet.main_wallet);\n    const [loading, setLoading] = useState(false);\n\n    const transferBalance = (e) => {\n        e.preventDefault();\n        axios.post(\"https://stormy-ridge-27884.herokuapp.com/transfer_to_activation\", {\n            token: JSON.parse(localStorage.getItem(\"token\")),\n            amount: parseInt(amount)\n        }).then(res => {\n            user.wallet = res.data.balance;\n            setMainBalance(res.data.balance.main_wallet);\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            setLoading(false);\n        }).catch(err => {\n                console.log(err);\n        })\n    }\n\n    return (\n        <div className=\"section\">\n            <h1 className=\"trans-head\">\n                Activation Wallet Recharge\n            </h1>\n            <Form onSubmit={transferBalance} >\n                <div className=\"form-group\" key=\"formMainBalance\">\n                    <label>Main Wallet Balance:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control text-left\"\n                        placeholder=\"Main Wallet Balance\"\n                        value={mainBalance}\n                        disabled\n                    />\n                </div>\n\n                <div className=\"form-group\" key=\"formAmount\">\n                    <label>Amount:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control w-100 text-left\"\n                        onChange={(e) => setAmount(e.target.value)}\n                        placeholder=\"Amount\"\n                        value={amount}\n                    />\n                </div>\n\n\n                <button\n                    className={`btn btn-primary ml-3 ${loading ? \"disabled\" : \"\"}`}\n                    onClick={() => setLoading(true)}\n                >\n                    {loading ? \"Loading...\" : \"Withdrawal\"}\n                </button>\n\n            </Form>\n        </div>\n    );\n}\n\nexport default Transfer;\n","import { useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction MyTeam({team, setTeam}) {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    \n\n    useEffect(() => {\n        if (team.length === 0) {\n            axios.post(\"https://stormy-ridge-27884.herokuapp.com/getUsers\", {\n            token: localStorage.getItem(\"token\"),\n            userIds: user.referals,\n        })\n            .then(res => {\n                setTeam(res.data);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        }\n    }, [team, setTeam, user]);\n    return (\n          \n        <div className=\"section\">\n                {team.length > 0 ? (\n                    <div className=\"row\">\n                        <div className=\"col s12 m12\">\n                            <div className=\"card\">\n                                <div className=\"card-content\">\n                                    <span className=\"card-title\">My Team</span>\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Name</th>\n                                                <th>ID</th>\n                                                <th>Join Date</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {team.map((member, index) => (\n                                                <tr key={member._id}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{member.name}</td>\n                                                    <td>{member.uid}</td>\n                                                    <td>{new Date(member.created_at).toLocaleDateString()}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                        <div className=\"text-center\">\n                            <h3>No Referals</h3>\n                            <p>You have no referals yet</p>\n                        </div>\n                    )}\n        </div>\n    );\n}\n\nexport default MyTeam;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./login.css\"\nimport axios from 'axios';\n\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    let history = useHistory();\n\n    useEffect(() => {\n        if (localStorage.getItem(\"user\")) {\n            history.push(\"/dashboard\")\n        }\n    }, [history])\n    \n    const CheckLogin = (e) => {\n        setLoading(true)\n        e.preventDefault()\n        axios.post('https://stormy-ridge-27884.herokuapp.com/login', {\n            username: username,\n            password: password\n        }).then(res => {\n            if (res.data.user) {\n                console.log(res.data)\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('user', JSON.stringify(res.data.user))\n                localStorage.setItem('id_price', res.data.config.id_price)\n                localStorage.setItem('promotion', res.data.config.promotion)\n                localStorage.setItem('globalCount', res.data.globalCount)\n\n                setLoading(false)\n                setTimeout(() => {\n                    history.push(\"/dashboard\");\n                }, 1000);\n            }\n        })\n            .catch(err => {\n                if (err.response.status === 401) {\n                    alert(\"Invalid username or password\")\n                }\n                setLoading(false)\n                console.log(err)\n            })\n    }\n    return (\n        <div>\n            <div className=\"wrapper\">\n\t<div className=\"container\">\n                    <h1 style={{ color: \"white\", fontWeight: 'bolder' }}>Welcome</h1>\n\t\t\n\t\t<form className=\"form\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n\t\t\t<button\n                            type=\"submit\"\n                            id=\"login-button\"\n                            onClick={(e) => CheckLogin(e)}\n                            className={loading ? \"btn btn-black\" : \"\"}\n                        >\n                            {loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"Login\"}\n            </button>\n\t\t</form>\n\t</div>\n\t\n        <ul className=\"bg-bubbles\">\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n        </ul>\n    </div>\n    </div>\n    )\n}\n","import axios from 'axios'\nimport { useState } from 'react'\nimport \"./adminLogin.css\"\nimport { useHistory } from 'react-router-dom'\n\nexport default function AdminLogin() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n    const history = useHistory()\n\n    const LoginCheck = (e) => {\n        e.preventDefault();\n        setLoading(true)\n        axios.post('https://stormy-ridge-27884.herokuapp.com/admin/login', {\n        username: username,\n        password: password\n        })\n            .then(res => {\n            setLoading(false)\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('user', JSON.stringify(res.data.user))\n            setTimeout(() => {\n                history.push('/admin/dashboard')\n            }, 300);\n        })\n        .catch(err => {\n            setLoading(false)\n            setError(true)\n            setTimeout(() => {\n                setError(false)\n            }, 2000);\n            console.log(err)\n        })\n    }\n    return (\n    <div className=\"container-fluid container-body\">\n        <div className=\"row\">\n            <div className=\"col-lg-3 col-md-2\"></div>\n            <div className=\"col-lg-6 col-md-8 login-box\">\n                <div className=\"col-lg-12 login-key\">\n                    <i className=\"fa fa-key\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"col-lg-12 login-title\">\n                    ADMIN PANEL\n                    </div>\n                    \n                    <div className=\"alert alert-danger\" role=\"alert\" style={{display: error ? \"block\" : \"none\"}}>\n                        Invalid Username or Password\n                    </div>\n\n\n                <div className=\"col-lg-12 login-form\">\n                    <div className=\"col-lg-12 login-form\">\n                            <form onSubmit={ LoginCheck }>\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\">USERNAME</label>\n                                    <input type=\"text\" className=\"form-control\" value={ username } onChange={ (e) => setUsername(e.target.value) }/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\">PASSWORD</label>\n                                <input type=\"password\" className=\"form-control i\"  value={ password } onChange={ (e) => setPassword(e.target.value) } />\n                            </div>\n\n                            <div className=\"col-lg-12 loginbttm\">\n                                <div className=\"col-lg-6 offset-lg-3 login-btm login-button\">\n                                        <button\n                                            type=\"submit\"\n                                            className={ loading ? \"btn btn-warning btn-block btn-lg btn-login\" : \"btn btn-primary btn-block btn-lg btn-login\" }\n                                        >\n                                         { loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"LOGIN\" }   \n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"col-lg-3 col-md-2\"></div>\n            </div>\n        </div>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DataTable from 'react-data-table-component';\n\n\nconst columns = [\n    {\n        name: 'amount',\n        selector: row => row.amount,\n        sortable: true,\n    },\n    {\n        name: 'type',\n        selector: row => row.type,\n        sortable: true,\n    },\n    {\n        name: 'created_at',\n        selector: row => new Date(row.created_at).toLocaleDateString(),\n        sortable: true,\n    },\n];\n\n\n\nconst TransactionHistory = () => {\n    const [transactions, setTransactions] = useState([])\n    useEffect(() => {\n        axios.get('https://stormy-ridge-27884.herokuapp.com/transaction/all')\n            .then(res => {\n                setTransactions(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n    return (\n        <div className=\"section\">\n            <h1>Transaction History</h1>\n            <DataTable\n                columns={columns}\n                data={transactions}\n                pagination\n                paginationPerPage={10}\n            />\n        </div>\n    );\n}\n\nexport default TransactionHistory;","import { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst Logout = () => {\n    const history = useHistory()\n    const handleLogout = () => {\n        setClicked(false)\n        localStorage.removeItem('token')\n        localStorage.removeItem('user')\n        history.push('/admin')\n    }\n    const [clicked, setClicked] = useState(false)\n    return (\n        <div>\n            <h1>Logout</h1>\n            <button\n                onClick={() => {\n                    setClicked(true)\n                    setTimeout(() => {\n                        handleLogout()\n                    }, 800)\n                }}\n                className={clicked ? 'btn btn-danger' : 'btn btn-primary'}\n            >\n                {clicked ? <span>Logging out... <i class=\"fas fa-spinner fa-spin\"></i></span> : 'Logout'}\n            </button>\n        </div>\n    )\n}\nexport default Logout;","import { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport { Table } from 'reactstrap'\n\nconst UserList = () => {\n    const [users, setUsers] = useState([])\n    useEffect(() => {\n        axios.get('https://stormy-ridge-27884.herokuapp.com/users')\n            .then(res => {\n                setUsers(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n     const handleSubmit = (e, uid , username, password, email, phone, head_member, bank_name, account_number, account_holder_name, bank_branch, ifsc_code, is_admin, is_bank_locked, id_count, main_wallet, activation_wallet) => {\n        e.preventDefault()\n        axios.put(`http://stormy-ridge-27884.herokuapp.com/update_user/${uid}`, {\n            token: JSON.parse(localStorage.getItem('token')),\n            username,\n            password,\n            email,\n            phone,\n            head_member,\n            bank_name,\n            account_number,\n            account_holder_name,\n            bank_branch,\n            ifsc_code,\n            is_admin,\n            is_bank_locked,\n            id_count,\n            main_wallet,\n            activation_wallet,\n        })\n            .then(res => {\n                console.log(res)\n\n            }).catch(err => {\n                console.log(err)\n\n            })\n        \n    }\n\n    return (\n        <div>\n            <h1>User List</h1>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Username</th>\n                        <th>Password</th>\n                        <th>Join Date</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((user, index) => {\n                        return (\n                            <tr key={index}>\n                                <td>{user.uid}</td>\n                                <td>{user.username}</td>\n                                <td>{user.password}</td>\n                                <td>{new Date(user.created_at).toLocaleDateString()}</td>\n                                <td>\n                                    \n                                    <UserEditModel user={user} handleSubmit={ handleSubmit }/>\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nconst UserEditModel = ({user, handleSubmit}) => {\n    return (\n        <Fragment>\n            <button type=\"button\" class=\"btn btn-info mr-1 text-white\" data-bs-toggle=\"modal\" data-bs-target={`#myModal${user.uid}`}>\n                <i class=\"fas fa-edit\"></i>\n            </button>\n            <div class=\"modal fade\" id={`myModal${user.uid}`}>\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Change Detail for {user.username}</h4>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                </div>\n\n                <div class=\"modal-body\">\n                            <UserDetailEditForm user={user} handleSubmit={ handleSubmit }/>\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n\n                </div>\n            </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\nconst UserDetailEditForm = ({ user, handleSubmit }) => {\n    const [username, setUsername] = useState(user.username)\n    const [password, setPassword] = useState(user.password)\n    const [email, setEmail] = useState(user.email)\n    const [phone, setPhone] = useState(user.phone)\n    const [head_member, setHeadMember] = useState(user.head_member)\n    const [bank_name, setBankName] = useState(user.bank.bank_name)\n    const [account_number, setAccountNumber] = useState(user.bank.account_number)\n    const [account_holder_name, setAccountHolderName] = useState(user.bank.account_holder_name)\n    const [bank_branch, setBankBranch] = useState(user.bank.bank_branch)\n    const [ifsc_code, setIfscCode] = useState(user.bank.ifsc_code)\n    const [is_admin, setIsAdmin] = useState(user.is_admin)\n    const [is_bank_locked, setIsBankLocked] = useState(user.is_bank_locked)\n    const [id_count, setIdCount] = useState(user.id_count)\n    // const [referals, setReferals] = useState(user.referals)\n    // const [main_wallet, setMainWallet] = useState(user.wallet.main_wallet)\n    // const [activation_wallet, setActivationWallet] = useState(user.wallet.activation_wallet)\n    // const [status, setStatus] = useState(user.status)\n    const [created_at, setCreatedAt] = useState(user.created_at)\n    const [level, setLevel] = useState({\n        bronze: {\n            joined: user.levels.bronze.joined,\n            days: user.levels.bronze.days,\n            missed: user.levels.bronze.missed\n        },\n        silver: {\n            joined: user.levels.silver.joined,\n            days: user.levels.silver.days,\n            missed: user.levels.silver.missed\n        },\n        gold: {\n            joined: user.levels.gold.joined,\n            days: user.levels.gold.days,\n            missed: user.levels.gold.missed\n        },\n        pearl: {\n            joined: user.levels.pearl.joined,\n            days: user.levels.pearl.days,\n            missed: user.levels.pearl.missed\n        },\n        emerald: {\n            joined: user.levels.emerald.joined,\n            days: user.levels.emerald.days,\n            missed: user.levels.emerald.missed\n        },\n        ruby: {\n            joined: user.levels.ruby.joined,\n            days: user.levels.ruby.days,\n            missed: user.levels.ruby.missed\n        },\n        platinum: {\n            joined: user.levels.platinum.joined,\n            days: user.levels.platinum.days,\n            missed: user.levels.platinum.missed\n        },\n        diamond: {\n            joined: user.levels.diamond.joined,\n            days: user.levels.diamond.days,\n            missed: user.levels.diamond.missed\n        },\n        royal: {\n            joined: user.levels.royal.joined,\n            days: user.levels.royal.days,\n            missed: user.levels.royal.missed\n        },\n        crown: {\n            joined: user.levels.crown.joined,\n            days: user.levels.crown.days,\n            missed: user.levels.crown.missed\n        },\n        king: {\n            joined: user.levels.king.joined,\n            days: user.levels.king.days,\n            missed: user.levels.king.missed\n        }\n    })\n\n    const [loading, setLoading] = useState(false)\n\n    \n   \n    \n    return (\n        <Fragment>\n            \n            <form onSubmit={(e) => {\n                setLoading(true)\n                handleSubmit(e, user.uid, username, password, email, phone, head_member, bank_name, account_number, account_holder_name, bank_branch, ifsc_code, is_admin, is_bank_locked, id_count)\n                    .then(() => {\n                        setLoading(false)\n                    })\n            }}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"uid\">UID</label>\n                            <input type=\"text\" className=\"form-control w-100\" id=\"uid\" placeholder=\"uid\" defaultValue={user.uid} disabled />\n                        </div>\n                        <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h5>User Detail</h5>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control w-100\" id=\"username\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"text\" className=\"form-control w-100\" id=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" className=\"form-control w-100\" id=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone\">Phone</label>\n                            <input type=\"text\" className=\"form-control w-100\" id=\"phone\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"head_member\">Head Member</label>\n                            <input type=\"text\" className=\"form-control w-100\" id=\"head_member\" placeholder=\"Head Member\" value={head_member} onChange={(e) => setHeadMember(e.target.value)} />\n                        </div>\n                    </div>\n                    </div>\n                        \n\n                        <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">Bank Details</h3>\n                    </div>\n                    <div className=\"card-body\">\n                         <div className=\"form-group\">\n                                    <label htmlFor=\"bank_name\">Bank Name</label>\n                                    <input type=\"text\" className=\"form-control w-100\" id=\"bank_name\" placeholder=\"Bank Name\" value={bank_name} onChange={(e) => setBankName(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"bank_branch\">Bank Branch</label>\n                                    <input type=\"text\" className=\"form-control w-100\" id=\"bank_branch\" placeholder=\"Bank Branch\" value={bank_branch} onChange={(e) => setBankBranch(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"account_holder_name\">Account holder Name</label>\n                                    <input type=\"text\" className=\"form-control w-100\" id=\"account_holder_name\" placeholder=\"Account holder Name\" value={account_holder_name} onChange={(e) => setAccountHolderName(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"account_number\">Account Number</label>\n                                    <input type=\"text\" className=\"form-control w-100\" id=\"account_number\" placeholder=\"Account Number\" value={account_number} onChange={(e) => setAccountNumber(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"ifsc_code\">IFSC Code</label>\n                                    <input type=\"text\" className=\"form-control w-100\" id=\"ifsc_code\" placeholder=\"IFSC Code\" value={ifsc_code} onChange={(e) => setIfscCode(e.target.value)} />\n                        </div>\n                    </div>\n                </div>\n\n\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-heading\">\n                                <h3 className=\"panel-title\">Levels</h3>\n                            </div>\n                            <div className=\"panel-body\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"level\">Level</label>\n                                    <select className=\"form-control w-100\" id=\"level\" value={level} onChange={(e) => setLevel(e.target.value)}>\n                                        <option value=\"\">Select Level</option>\n                                        <option value=\"bronze\">Bronze</option>\n                                        <option value=\"silver\">Silver</option>\n                                        <option value=\"gold\">Gold</option>\n                                        <option value=\"platinum\">Platinum</option>\n                                        <option value=\"diamond\">Diamond</option>\n                                        <option value=\"royal\">Royal</option>\n                                        <option value=\"crown\">Crown</option>\n                                        <option value=\"king\">King</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"joined\">Joined</label>\n                                    <input type=\"datetime-local\" className=\"form-control w-100\" id=\"joined\" placeholder=\"Joined\" value={created_at} onChange={(e) => setCreatedAt(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"isAdmin\">is Admin?</label>\n                                    <select className=\"form-control w-100\" id=\"isAdmin\" value={is_admin} onChange={(e) => setIsAdmin(e.target.value)}>\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"id_count\">id Count</label>\n                                    <input type=\"number\" className=\"form-control w-100\" id=\"id_count\" placeholder=\"id Count\" value={id_count} onChange={(e) => setIdCount(e.target.value)} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"is_bank_locked\">is Bank Locked?</label>\n                                    <select className=\"form-control w-100\" id=\"is_bank_locked\" value={is_bank_locked} onChange={(e) => setIsBankLocked(e.target.value)}>\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n                                {/* <div className=\"panel panel-default\">\n                                    <div className=\"panel-heading\">\n                                        <h3 className=\"panel-title\">Wallet Information</h3>\n                                         */}\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            {loading ? <i className=\"fa fa-spinner fa-spin\"></i> : 'Save'}\n                        </button>\n                    </form>\n                \n        </ Fragment>\n    )\n}\n\nexport default UserList;","import {useState} from 'react'\n\nexport default function Setting() {\n    const [price, setPrice] = useState(0)\n    const [promo, setPromo] = useState(0)\n    const [loading1, setLoading1] = useState(false)\n    const [loading2, setLoading2] = useState(false)\n    return (\n        <div className=\"section\">\n            <h1>Setting</h1>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"PricePerID\">Price Per ID</label>\n                    <div className=\"d-flex\">\n                        <input\n                            type=\"number\"\n                            className=\"form-control w-100\"\n                            id=\"PricePerID\"\n                            aria-describedby=\"priceHelp\"\n                            placeholder=\"Enter price\"\n                            value={price}\n                            onChange={(e) => setPrice(e.target.value)}\n                        />\n                        <button\n                            className=\"btn btn-primary ml-2\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setLoading1(true)\n                                setTimeout(() => {\n                                    setLoading1(false)\n                                }, 2000)\n                            }}\n                        >\n                            {loading1 ? 'Loading...' : 'Save'}\n                        </button>\n                    </div>\n                    <small id=\"priceHelp\" className=\"form-text text-muted\">Will effect at next user login</small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Promotion\">Promotion Message</label>\n                    <div className=\"d-flex\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control w-100\"\n                            id=\"Promotion\"\n                            aria-describedby=\"promotionHelp\"\n                            placeholder=\"Enter promotion message\"\n                            value={promo}\n                            onChange={(e) => setPromo(e.target.value)}\n                        />\n                        <button\n                            className=\"btn btn-primary ml-2\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setLoading2(true)\n                                setTimeout(() => {\n                                    setLoading2(false)\n                                }, 2000)\n                            }}\n                        >\n                            {loading2 ? 'Loading...' : 'Save'}\n                        </button>\n                    </div>\n                    <small id=\"promotionHelp\" className=\"form-text text-muted\">Set blank to turn off Promotion</small>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import { Tab, Row, Col, Nav } from 'react-bootstrap'\nimport TransactionHistory from './components/TransactionHistory'\nimport Logout from './components/Logout'\nimport UserList from './components/UserList'\nimport Setting from './components/Setting'\n\n\nexport default function AdminDashboard() {\n    return (\n        <div className=\"section\">\n\n            \n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n        <Row>\n            <Col sm={3}>\n            <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                <Nav.Link eventKey=\"first\">User List</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                <Nav.Link eventKey=\"second\">Transaction History</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                <Nav.Link eventKey=\"setting\">Setting</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                <Nav.Link eventKey=\"logout\">Logout</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            </Col>\n            <Col sm={9}>\n            <Tab.Content>\n                <Tab.Pane eventKey=\"first\">\n                    <UserList />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"second\">\n                    <TransactionHistory />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"setting\">\n                    <Setting />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"logout\">\n                    <Logout />\n                </Tab.Pane>\n            </Tab.Content>\n            </Col>\n        </Row>\n        </Tab.Container>\n\n        </div>\n    )\n}\n\n\n\n\n\n","import React from 'react'\nimport { useParams } from 'react-router'\n\nexport default function Referal() {\n\n    const params = useParams()\n    return (\n        <div>\n            <div\n                className=\"jumbotron jumbotron-fluid\"\n                style={{\n                    height: '100vh',\n                    width: '100vw',\n                    position: 'relative',\n                    overflow: 'hidden'\n                }}\n            >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 offset-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <b>Referal by { params.ref_id }</b>\n                                </div>\n                                <div className=\"card-body\">\n                                    <MasterForm referid={params.ref_id}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n        \n\n            </div>\n            \n        </div>\n    )\n}\n\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStep: 1,\n      email: \"\",\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      aadhaar: \"\",\n      phone: \"\",\n      ref_id: props.referid,\n    }\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n   \n  handleSubmit = event => {\n    event.preventDefault()\n    console.log(this.state)\n    const { email, name, username, password, aadhaar, phone, ref_id } = this.state\n    if(email && name && username && password && aadhaar && phone){\n      fetch('https://stormy-ridge-27884.herokuapp.com/refer/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          name,\n          username,\n          password,\n          addhar:aadhaar,\n          phone,\n          head:ref_id\n        })\n      })\n      .then(res => res.json())\n      .then(res => {\n        if(res.success){\n          alert(\"Successfully registered\")\n        }\n        else{\n          alert(\"Error in registration\")\n        }\n      })\n    }\n  }\n  \n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 2? 3: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n/*\n* the functions for our button\n*/\npreviousButton() {\n  let currentStep = this.state.currentStep;\n  if(currentStep !==1){\n    return (\n      <button \n        className=\"btn btn-secondary mt-3\" \n        type=\"button\" onClick={this._prev}>\n      Previous\n      </button>\n    )\n  }\n  return null;\n}\n\nnextButton(){\n  let currentStep = this.state.currentStep;\n  if(currentStep <3){\n    return (\n      <button \n        className=\"btn btn-primary float-right mt-3\" \n        type=\"button\" onClick={this._next}>\n      Next\n      </button>        \n    )\n  }\n  return null;\n}\n  \n  render() {    \n    return (\n        <div className=\"col-12 card p-3\">\n\n      <form onSubmit={this.handleSubmit} >\n      {/* \n        render the form steps and pass required props in\n      */}\n        <Step1 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          email={this.state.email}\n          name={this.state.name}\n        />\n        <Step2 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          username={this.state.username}\n          password={this.state.password}\n          />\n        <Step3 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          aadhaar={this.state.aadhaar}\n          phone={this.state.phone}\n        />\n        {this.previousButton()}\n        {this.nextButton()}\n\n      </form>\n      </div>\n    );\n  }\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null\n  } \n    return (\n        <React.Fragment>\n    <div className=\"form-group m-3\">\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control w-100\"\n              id=\"email\"\n              name=\"email\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter email\"\n              value={props.email}\n              onChange={props.handleChange}\n            />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control w-100\"\n              id=\"name\"\n              name=\"name\"\n              aria-describedby=\"nameHelp\"\n              placeholder=\"Enter name\"\n              value={props.name}\n              onChange={props.handleChange}\n            />\n        <small id=\"nameHelp\" className=\"form-text text-muted\">We'll never share your name with anyone else.</small>\n        </div>\n\n    </div>\n      </React.Fragment>\n  );\n}\n\nfunction Step2(props) {\n  if (props.currentStep !== 2) {\n    return null\n  } \n  return(\n    <React.Fragment>\n      <div className=\"form-group m-3\">\n          <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className=\"form-control w-100\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Enter username\"\n              value={props.username}\n              onChange={props.handleChange}\n            />\n      </div>\n      <div className=\"form-group m-3\">\n          <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control w-100\"\n              id=\"password\"\n              name=\"password\"\n              aria-describedby=\"passwordHelp\"\n              placeholder=\"Enter password\"\n              value={props.password}\n              onChange={props.handleChange}\n            />\n        <small id=\"nameHelp\" className=\"form-text text-muted\">We'll never share your details with anyone else.</small>\n      </div>\n      </React.Fragment>\n  );\n}\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null\n  } \n  return(\n    <React.Fragment>\n    <div className=\"form-group m-3\">\n      <label htmlFor=\"aadhaar\">Aadhaar number</label>\n      <input\n        className=\"form-control w-100\"\n          id=\"aadhaar\"\n          name=\"aadhaar\"\n          type=\"text\"\n          placeholder=\"Enter Aadhaar Number\"\n          value={props.aadhaar}\n          onChange={props.handleChange}\n        />      \n    </div>\n    <div className=\"form-group m-3\">\n      <label htmlFor=\"phone\">Phone</label>\n      <input\n        className=\"form-control w-100\"\n          id=\"phone\"\n          name=\"phone\"\n          type=\"number\"\n          placeholder=\"Enter Phone Number\"\n          value={props.phone}\n          onChange={props.handleChange}\n        />      \n    </div>\n    <button className=\"btn btn-success float-right mt-3\">Sign up</button>\n    </React.Fragment>\n  );\n}","import './App.css';\nimport { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Refferl from './components/Refferl';\nimport Report from './components/Report';\nimport Logout from './components/Logout';\nimport JoinNmem from './components/JoinNmem';\nimport Widthdrawl from './components/Widthdrawl';\nimport UpdatePro from './components/UpdatePro';\nimport Transfer from './components/Transfer';\nimport MyTeam from './components/MyTeam';\nimport Login from './components/loginpage/Login';\nimport AdminLogin from './admin/AdminLogin';\nimport AdminDashboard from './admin/Dashboard';\nimport Referal from './components/Referal';\n\n\nfunction App() {\n  const [team, setTeam] = useState([]);\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/admin/\" component={AdminLogin} />\n          <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\n          <Route exact path=\"/referal/:ref_id\" component={Referal} />\n          <Route exact path=\"/referal\" component={() => <p className=\"d-flex alert alert-danger\">No Referral ID Found</p>} />\n          <div className=\"App\">\n            <Sidebar />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/referrals\" component={Refferl} />\n            <Route exact path=\"/report\" component={Report} />\n            <Route exact path=\"/logout\" component={() => <Logout setTeam={setTeam} />} />\n            <Route exact path=\"/join\" component={JoinNmem} />\n            <Route exact path=\"/widthdrawl\" component={Widthdrawl} />\n            <Route exact path=\"/update\" component={UpdatePro} />\n            <Route exact path=\"/transfer\" component={Transfer} />\n          <Route exact path=\"/myteam\" component={() => <MyTeam team={team} setTeam={ setTeam} />} />\n          </div>\n       </Switch>\n      </Router>\n  );\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}