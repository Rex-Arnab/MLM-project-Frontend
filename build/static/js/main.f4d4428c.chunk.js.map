{"version":3,"sources":["components/Sidebar.jsx","components/Dashboard.jsx","components/Refferl.jsx","components/Report.jsx","components/Logout.jsx","components/JoinNmem.jsx","components/Activation.jsx","components/Widthdrawl.jsx","components/ChangPass.jsx","components/UpdatePro.jsx","components/Transfer.jsx","components/dashboard/ReferalIncome.jsx","components/MyTeam.jsx","components/loginpage/Login.jsx","components/registerpage/Register.jsx","App.js","index.js"],"names":["Link","to","title","icons","exact","activeClassName","icon","Sidebar","style","display","height","overflow","textColor","backgroundColor","prefix","className","color","Dashboard","user","JSON","parse","localStorage","getItem","history","useHistory","useEffect","push","username","uid","Date","created_at","toLocaleDateString","Refferl","useState","copied","setCopied","shareUrl","referralCode","referralCount","type","defaultValue","disabled","text","onCopy","FacebookShareButton","url","quote","FacebookIcon","size","round","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","Report","Logout","axios","post","token","removeItem","JoinNmem","useForm","register","errors","formState","regsiterUsername","setRegisterUsername","regsiterPhone","setRegisterPhone","regsiterEmail","setRegisterEmail","regsiterAddar","setRegisterAddar","regsiterHeadmem","setRegisterHeadmem","Form","onSubmit","method","data","password","phone","email","aadhar","head","withCredentials","then","response","console","log","Group","controlId","Label","Control","placeholder","required","value","onChange","e","target","name","render","message","minLength","maxLength","Button","variant","Activation","noofid","setNumberOfId","perid","setPerid","Widthdrawl","amount","wallet","main_wallet","ChangPass","handleSubmit","currentPassword","setCurrentPassword","newPassword","setnewPassword","reEnterPassword","setReEnterPassword","old_password","new_password","alert","UpdatePro","regsiterBankname","setRegisterBankname","regsiterAcountNo","setRegisterAccountNo","regsiterIfsc","setRegisterIfsc","regsiterHolder","setRegisterHolder","regsiterBankbranch","setRegisterBankbranch","bank_name","account_number","account_holder_name","bank_branch","ifsc_code","Transfer","ReferalIncome","MyTeam","Login","setUsername","setPassword","fontWeight","id","onClick","preventDefault","res","setItem","stringify","CheckLogin","Register","registerName","setRegisterName","regsiterPassword","setRegisterPassword","src","alt","userContext","createContext","App","setUser","Provider","basename","window","location","hostname","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4d4428c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from \"cdbreact\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Link = ({ to, title, icons }) => {\n    return (\n          <NavLink\n            exact\n            to={\"/\" + to}\n            activeClassName=\"activeClicked\"\n        >\n            <CDBSidebarMenuItem icon={ icons }>\n                {title}\n            </CDBSidebarMenuItem>\n        </NavLink>\n    )\n}\nconst Sidebar = () => {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                height: \"cover\",\n                overflow: \"scroll initial\",\n            }}\n        >\n            <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n\n                <CDBSidebarHeader prefix={<i className=\"fa fa-bars\"></i>} >\n\n                    <span className=\"text-decoration-none\" style={{ color: \"inherit\" }}>Logo</span>\n                </CDBSidebarHeader>\n\n                <CDBSidebarContent className=\"sidebar-content\">\n                    <CDBSidebarMenu>\n                        <Link to=\"dashboard\" title=\"Dashboard\" icons=\"columns\" />\n                        <Link to=\"referrals\" title=\"Referrals\" icons=\"user-friends\"/>\n                        <Link to=\"join\" title=\"Join new Member\" icons=\"user-plus\"/>\n                        <Link to=\"update\" title=\"Update Profile\" icons=\"users-cog\"/>\n                        <Link to=\"widthdrawl\" title=\"Widthdrawl\" icons=\"piggy-bank\"/>\n                        <Link to=\"transfer\" title=\"Transfer\" icons=\"exchange-alt\"/>\n                        <Link to=\"myteam\" title=\"My Team\" icons=\"users\"/>\n                        <Link to=\"report\" title=\"Report\" icons=\"chart-bar\"/>\n                        <Link to=\"logout\" title=\"Log out\" icons=\"power-off\"/>\n                    </CDBSidebarMenu>\n                </CDBSidebarContent>\n            </CDBSidebar>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import { useEffect } from \"react\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Dashboard() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const history = useHistory();\n    useEffect(() => {\n        if (!user) {\n            navigate(\"/logout\");\n        }\n    }, [history, user]);\n    return (\n        <div>\n            <div className=\"d-flex flex-column\">\n                <div className=\"p-2\">\n                    <h5>Name: { user.username }</h5>\n                    <h5>ID: { user.uid} </h5>\n                    <h5>Joining Date:{ new Date(user.created_at).toLocaleDateString()}</h5>\n                </div>\n            </div>\n            \n            <div className=\"d-flex flex-column\">\n                <div className=\"text-center\">\n                    <h4>\n                        <b>Offers Provided By Company</b>\n                    </h4>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <div className=\"grid-container d-flex flex-wrap justify-content-center\">\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Refarel Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Joing Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Level Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Total Income\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <div className=\"grid-container d-flex flex-wrap justify-content-center\">\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Main Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Active Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Offer Income\n                            </div>\n                            <div className=\"grid-item my-3 py-3 cardRem\">\n                                Global Income\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport {\n    FacebookShareButton,\n    WhatsappShareButton,\n    LinkedinShareButton,\n    TwitterShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    LinkedinIcon,\n    TwitterIcon,\n} from \"react-share\";\nimport \"../App.css\";\n\nfunction Refferl() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [copied, setCopied] = useState(false);\n    const shareUrl = user.referralCode; // TODO: Give Your Personalised URL To Share\n\n    return (\n        <div className=\"section\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12 font-weight-bold\">\n                        <h4>Total Referrel Count: {user.referralCount}</h4>\n                    </div>\n                </div>\n                <div className=\"row  mb-3\">\n                    <div className=\"col-md-12\">\n                        <div className=\"refferl-link\">\n                            <input type=\"text\" defaultValue={ shareUrl } disabled className=\"mb-1\"/>\n                            <CopyToClipboard\n                                text={shareUrl}\n                                onCopy={() => setCopied(true)}\n                            >\n                                <button className=\"btn btn-primary\">\n                                    {copied ? \"Copied\": \"Copy Link\"}\n                                </button>\n                            </CopyToClipboard>\n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"refferl-share\">\n                            <FacebookShareButton\n                                url={shareUrl}\n                                quote=\"Share Your Referral Link\"\n                            >\n                                <FacebookIcon size={32} round />\n                            </FacebookShareButton>\n                            <WhatsappShareButton url={shareUrl}>\n                                <WhatsappIcon size={32} round />\n                            </WhatsappShareButton>\n                            <LinkedinShareButton url={shareUrl}>\n                                <LinkedinIcon size={32} round />\n                            </LinkedinShareButton>\n                            <TwitterShareButton url={shareUrl}>\n                                <TwitterIcon size={32} round />\n                            </TwitterShareButton>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n//             <div>\n//                     <h3>\n//                         <b>\n                            \n//                         </b>\n//                     </h3>\n//                 <h5>\n//                     Your Referral Link: \n//                     <span>\n//                         <input\n//                             type=\"text\"\n//                             defaultValue={user.referralCode}\n//                             className=\"form-control\"\n//                         />\n//                         <CopyToClipboard\n//                             text={user.referralCode}\n//                             onCopy={() => setCopied(true)}\n//                         >\n//                             <button>Copy</button>\n//                         </CopyToClipboard>\n//                         {copied ? (\n//                             <span style={{ color: \"red\" }}>Copid</span>\n//                         ) : null}\n//                     </span>\n//                 </h5>\n//             </div>\n\n//             <div\n//                 style={{\n//                     background: \"#fff\",\n//                     height: \"100vh\",\n//                     width: \"100%\",\n//                 }}\n//             >\n//                 <h3 className=\"px-5\">Share Now:</h3>\n//                 <div className=\"d-flex px-5 py-3 mx-5 flex-row\">\n//                     <FacebookShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <FacebookIcon size={40} round={true} />\n//                         &nbsp;\n//                     </FacebookShareButton>\n\n//                     <WhatsappShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <WhatsappIcon size={40} round={true} />\n//                         &nbsp;\n//                     </WhatsappShareButton>\n\n//                     <LinkedinShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <LinkedinIcon size={40} round={true} />\n//                         &nbsp;\n//                     </LinkedinShareButton>\n\n//                     <TwitterShareButton\n//                         url={shareUrl}\n//                         quote={\"Your friend wants to share MLM refferl link.\"}\n//                         hashtag={\"#MLM4Life\"}\n//                     >\n//                         <TwitterIcon size={40} round={true} />\n//                         &nbsp;\n//                     </TwitterShareButton>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nexport default Refferl;\n","import React from \"react\";\n\nfunction Report() {\n    return (\n        <div className=\"section\">\n            <h2>My Report</h2>\n        </div>\n    );\n}\n\nexport default Report;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nfunction Logout() {\n    let history = useHistory();\n    useEffect(() => {\n        axios.post(\"https://stormy-ridge-27884.herokuapp.com/logout\", { token: localStorage.getItem(\"token\") })\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        navigate(\"/\");\n    }, [history]);\n    return (\n        <div>\n            <h1>Log Out Successful</h1>\n        </div>\n    );\n}\n\nexport default Logout;\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction JoinNmem() {\n    const {\n        register,\n        formState: { errors },\n    } = useForm();\n    const [regsiterUsername, setRegisterUsername] = useState(\"\");\n    const [regsiterPhone, setRegisterPhone] = useState(\"\");\n    const [regsiterEmail, setRegisterEmail] = useState(\"\");\n    const [regsiterAddar, setRegisterAddar] = useState(\"\");\n    const [regsiterHeadmem, setRegisterHeadmem] = useState(\"\");\n\n    const joinMem = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: regsiterUsername,\n                password: \"arnab123\",\n                phone: regsiterPhone,\n                email: regsiterEmail,\n                aadhar: regsiterAddar,\n                head: regsiterHeadmem,\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/register\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <div className=\"section\">\n            {/*  <pre>{JSON.stringify(userInfo, undefined, 2)}</pre> */}\n            <h1 className=\"join-head\">Join Members</h1>\n            <Form onSubmit={joinMem}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"username\"\n                        {...register(\"uname\", {\n                            required: \"Username is required\",\n                        })}\n                        value={regsiterUsername}\n                        onChange={(e) => setRegisterUsername(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"uname\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                {/* <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"password\"\n                        {...register(\"pass\", {\n                            required: \"password is required\",\n                        })}\n                        onChange={(e) => setRegisterPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"pass\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                /> */}\n                {/* <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        {...register(\"name\", { required: \"User Name is required\" })}\n                        onChange={(e) => setRegisterName(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                /> */}\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"phone no\"\n                        {...register(\"phone\", {\n                            required: \"phone no is required\",\n                            minLength: {\n                                value: 10,\n                                message: \"Phone number minimum 10 character\",\n                            },\n                            maxLength: {\n                                value: 10,\n                                message: \"Phone number maximum 10 character\",\n                            },\n                        })}\n                        value={regsiterPhone}\n                        onChange={(e) => setRegisterPhone(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"phone\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter your Email\"\n                        {...register(\"email\", {\n                            required: \"Email number is required\",\n                        })}\n                        value={regsiterEmail}\n                        onChange={(e) => setRegisterEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Aadhar No</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Addhar\"\n                        {...register(\"addhar\", {\n                            required: \"Addhar number is required\",\n\n                            minLength: {\n                                value: 12,\n                                message: \"Addhar number minimum 12 character\",\n                            },\n                            maxLength: {\n                                value: 16,\n                                message: \"Addhar numbe maximum 16 character\",\n                            },\n                        })}\n                        value={regsiterAddar}\n                        onChange={(e) => setRegisterAddar(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"addhar\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Head Member</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Head member\"\n                        {...register(\"head\", {\n                            required: \"Head Member is required\",\n                        })}\n                        value={regsiterHeadmem}\n                        onChange={(e) => setRegisterHeadmem(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"head\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default JoinNmem;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nfunction Activation() {\n    const [noofid, setNumberOfId] = useState(0);\n    const [perid, setPerid] = useState();\n    return (\n        <div className=\"active-container\">\n            <h1 className=\"active-head\">Activation Wallet Recharge</h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Number Of ID: </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        placeholder=\"Enter number of id \"\n                        onChange={(e) => setNumberOfId(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Per ID: </Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        value={perid}\n                        onChange={(e) => setPerid(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Final Amount: </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"famount\"\n                        defaultValue={noofid * perid}\n                    />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Activation;\n","import { Button, Form } from \"react-bootstrap\";\nimport Activation from \"./Activation\";\nimport axios from \"axios\";\n\n\nfunction Widthdrawl() {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const withdrawl = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: \"Arnab Biswas\",\n                amount: 10,\n                //amount: 525\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/withdraw_from_main\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <div className=\"section\">\n            <h1 className=\"withd-head\">Withdrawal Balance</h1>\n            <Form onSubmit={withdrawl}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Available Balance</Form.Label>\n                    <Form.Control type=\"text\" defaultValue={user.wallet.main_wallet} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Withdrawal Amount</Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Final Amount</Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">\n                    Withdrawal\n                </Button>\n            </Form>\n            <br />\n            <br />\n            <Activation />\n        </div>\n    );\n}\n\nexport default Widthdrawl;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction ChangPass() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setnewPassword] = useState(\"\");\n    const [reEnterPassword, setReEnterPassword] = useState(\"\");\n\n    const changePassword = () => {\n        if (newPassword === reEnterPassword) {\n            axios({\n                method: \"POST\",\n                data: {\n                    username: \"Arnab Biswas\",\n                    old_password: currentPassword,\n                    new_password: newPassword,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/change_password\",\n            }).then((response) => {\n                console.log(response);\n            });\n            alert(\"Password change Sucessfull\");\n        } else {\n            alert(\"password not match\");\n        }\n    };\n    const onSubmit = (data) => {\n        changePassword();\n    };\n    return (\n        <div className=\"change-container\">\n            <h1 className=\"change-head\">Change Password</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Current Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your Current Password \"\n                        {...register(\"cpassword\", {\n                            required: \"Current password is required\",\n                        })}\n                        value={currentPassword}\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"cpassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>New Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your new password\"\n                        {...register(\"npassword\", {\n                            required: \"Enter your new password\",\n                            maxLength: {\n                                value: 12,\n                                message: \"password maximum 12 character\",\n                            },\n                        })}\n                        value={newPassword}\n                        onChange={(e) => setnewPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"npassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Comfirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Comfirmation Password\"\n                        {...register(\"compassword\", {\n                            required: \"Re-enter your password\",\n                        })}\n                        value={reEnterPassword}\n                        onChange={(e) => setReEnterPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"compassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default ChangPass;\n","import ChangPass from \"./ChangPass\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction UpdatePro() {\n    const {\n        register,\n        formState: { errors },\n    } = useForm();\n    const [regsiterBankname, setRegisterBankname] = useState(\"\");\n    const [regsiterAcountNo, setRegisterAccountNo] = useState(\"\");\n    const [regsiterIfsc, setRegisterIfsc] = useState(\"\");\n    const [regsiterHolder, setRegisterHolder] = useState(\"\");\n    const [regsiterBankbranch, setRegisterBankbranch] = useState(\"\");\n    const update = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: \"Anupam Roy\",\n                bank_name: regsiterBankname,\n                account_number: regsiterAcountNo,\n                account_holder_name: regsiterHolder,\n                bank_branch: regsiterBankbranch,\n                ifsc_code: regsiterIfsc,\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/update_bank_info\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <div className=\"section\">\n            <h1 className=\"update-head\">Update Your Bank Information</h1>\n            <Form onSubmit={update}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Bank Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"SBI/AXIS/PNB/HDFC\"\n                        {...register(\"bank-name\", {\n                            required: \"Bank Name is required\",\n                        })}\n                        value={regsiterBankname}\n                        onChange={(e) => setRegisterBankname(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"bank-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Account Number</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your bank account no\"\n                        {...register(\"account\", {\n                            required: \"Account no is required\",\n                        })}\n                        value={regsiterAcountNo}\n                        onChange={(e) => setRegisterAccountNo(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"account\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>IFSC Code</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter IFSC code\"\n                        {...register(\"ifsc\", {\n                            required: \"IFSC code is required\",\n                        })}\n                        value={regsiterIfsc}\n                        onChange={(e) => setRegisterIfsc(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"ifsc\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Account Holder Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"holder-name\"\n                        {...register(\"holder-name\", {\n                            required: \"Holder-name is required\",\n                        })}\n                        value={regsiterHolder}\n                        onChange={(e) => setRegisterHolder(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"holder-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Bank Branch</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Branch name\"\n                        {...register(\"branch\", {\n                            required: \"Branch name is required\",\n                        })}\n                        value={regsiterBankbranch}\n                        onChange={(e) => setRegisterBankbranch(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"branch\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n            <br />\n            <ChangPass></ChangPass>\n        </div>\n    );\n}\n\nexport default UpdatePro;\n","import { Button, Form } from \"react-bootstrap\";\n\nfunction Transfer() {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    return (\n        <div className=\"section\">\n            <h1 className=\"trans-head\">\n                Transfer: Main Wallet to Activation Wallet{\" \"}\n            </h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Main Wallet Balance:</Form.Label>\n                    <Form.Control type=\"text\" name=\"wallet\" defaultValue={user.wallet.main_wallet} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Amount: </Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n\n                <Button variant=\"success\" type=\"submit\">\n                    Withdrawal\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Transfer;\n","import React from \"react\";\n\nfunction ReferalIncome() {\n    return (\n        <div>\n            <h1> Referal Income </h1>\n        </div>\n    );\n}\n\nexport default ReferalIncome;\n","import React from \"react\";\n\nfunction MyTeam() {\n    return (\n        <div className=\"section\">\n            <h1>This My team </h1>\n        </div>\n    );\n}\n\nexport default MyTeam;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./login.css\"\nimport axios from 'axios'\n\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    let history = useHistory();\n\n    useEffect(() => {\n        if (localStorage.getItem(\"user\")) {\n            navigate(\"/dashboard\")\n        }\n    }, [history])\n    \n    const CheckLogin = (e) => {\n        e.preventDefault()\n        axios.post('https://stormy-ridge-27884.herokuapp.com/login', {\n            username: username,\n            password: password\n        }).then(res => {\n            if (res.data.user) {\n                localStorage.setItem('token', JSON.stringify(res.data.token))\n                localStorage.setItem('user', JSON.stringify(res.data.user))\n                navigate(\"/dashboard\");\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"wrapper\">\n\t<div className=\"container\">\n                    <h1 style={{ color: \"white\", fontWeight: 'bolder' }}>Welcome</h1>\n\t\t\n\t\t<form className=\"form\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n\t\t\t<button\n                            type=\"submit\"\n                            id=\"login-button\"\n                            onClick={(e) => CheckLogin(e)}>\n                    Login\n            </button>\n\t\t</form>\n\t</div>\n\t\n        <ul className=\"bg-bubbles\">\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n        </ul>\n    </div>\n    </div>\n    )\n}\n","import { useState } from \"react\";\nimport \"./register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nfunction Register() {\n    const {\n        register,\n        formState: { errors },\n    } = useForm();\n    const [registerName, setRegisterName] = useState(\"\");\n    const [regsiterEmail, setRegisterEmail] = useState(\"\");\n    const [regsiterPassword, setRegisterPassword] = useState(\"\");\n    const [reEnterPassword, setReEnterPassword] = useState(\"\");\n    const Regis = () => {\n        if (regsiterPassword === reEnterPassword) {\n            axios({\n                method: \"POST\",\n                data: {\n                    name: registerName,\n                    email: regsiterEmail,\n                    password: regsiterPassword,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/update_bank_info\",\n            }).then((response) => {\n                console.log(response);\n            });\n            alert(\"Register Successfull\");\n        } else {\n            alert(\"password not match\");\n        }\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"row featurette sizing d-flex justify-content-center align-items-center\">\n                <div className=\"col-md-5 order-md-1 \">\n                    <img\n                        src=\"https://source.unsplash.com/user/erondu/800x1000\"\n                        alt=\"\"\n                        className=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n                    />\n                </div>\n                <div className=\"col-md-4 order-md-2 mt-5\">\n                    <h5 className=\"text-muted\">Welcome</h5>\n                    <h4 className=\"featurette-heading\">\n                        Register Your Account\n                    </h4>\n                    <div className=\"register ml-5\">\n                        <h1>Register</h1>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Name\"\n                            {...register(\"name\", {\n                                required: \"Name is required\",\n                            })}\n                            onChange={(e) => setRegisterName(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"name\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Email\"\n                            {...register(\"email\", {\n                                required: \"Email Address is required\",\n                            })}\n                            onChange={(e) => setRegisterEmail(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"email\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Your Password\"\n                            {...register(\"pass\", {\n                                required: \"Password is required\",\n                                minLength: {\n                                    value: 6,\n                                    message: \"password minimum 6 character \",\n                                },\n                                maxLength: {\n                                    value: 12,\n                                    message: \"password maximum 12 character\",\n                                },\n                            })}\n                            onChange={(e) =>\n                                setRegisterPassword(e.target.value)\n                            }\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"pass\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Re-enter Password \"\n                            {...register(\"rpass\", {\n                                required: \"Re-enter your password\",\n                            })}\n                            onChange={(e) => setReEnterPassword(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"rpass\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <div\n                            className=\"button\"\n                            onClick={() => Regis()}\n                        >\n                            <Link to=\"/login\">Register</Link>\n                        </div>\n                        <div>or</div>\n                        <div className=\"button\">\n                            <Link to=\"/login\">Login</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n","import { createContext, useState } from \"react\";\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport { BrowserRouter as Router , Switch, Route} from 'react-router-dom';\nimport Refferl from './components/Refferl';\nimport Report from './components/Report';\nimport Logout from './components/Logout';\nimport JoinNmem from './components/JoinNmem';\nimport Widthdrawl from './components/Widthdrawl';\nimport UpdatePro from './components/UpdatePro';\nimport Transfer from './components/Transfer';\nimport ReferalIncome from './components/dashboard/ReferalIncome';\nimport MyTeam from './components/MyTeam';\nimport Login from './components/loginpage/Login';\nimport Register from './components/registerpage/Register';\n\nconst userContext = createContext();\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  return (\n    <userContext.Provider value={{ user: user, setUser: setUser}}>\n    <Router\n        basename={window.location.hostname === 'localhost' ? '/' : 'MLM-project-Frontend/build/'}\n      >\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <div className=\"App\">\n            <Sidebar />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/dashboard/refarel-income\" component={ReferalIncome} />\n            <Route exact path=\"/referrals\" component={Refferl} />\n            <Route exact path=\"/report\" component={Report} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/join\" component={JoinNmem} />\n            <Route exact path=\"/widthdrawl\" component={Widthdrawl} />\n            <Route exact path=\"/update\" component={UpdatePro} />\n            <Route exact path=\"/transfer\" component={Transfer} />\n            <Route exact path=\"/referalincome\" component={ReferalIncome} />\n            <Route exact path=\"/myteam\" component={MyTeam} />\n          </div>\n       </Switch>\n      </div>\n      </Router>\n      </userContext.Provider>\n  );\n}\n \nexport default App;\nexport {\n  userContext\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}